{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","services/persons.js","components/Notification.jsx","App.jsx","index.js"],"names":["Filter","filterName","handleFilterChange","value","onChange","PersonForm","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","name","type","Persons","getFilterName","handleDelete","map","person","key","id","number","onClick","baseUrl","getAll","axios","get","then","response","data","create","personObject","post","update","put","remove","delete","Notification","notification","className","message","uuidv4","require","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","setNotification","useEffect","personService","initialPersons","catch","error","console","log","filter","toLowerCase","indexOf","checkDuplicateName","find","event","target","preventDefault","window","confirm","updatedPerson","updatedState","setTimeout","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeca2ffe.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nconst Filter = ({ filterName, handleFilterChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tfilter shown with{' '}\r\n\t\t\t<input value={filterName} onChange={handleFilterChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nconst PersonForm = ({\r\n\thandleSubmit,\r\n\tnewName,\r\n\thandleNameChange,\r\n\tnewNumber,\r\n\thandleNumberChange,\r\n}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\tname:{' '}\r\n\t\t\t\t<input name=\"personName\" value={newName} onChange={handleNameChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber: <input value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nconst Persons = ({ getFilterName, handleDelete }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{getFilterName.map((person) => (\r\n\t\t\t\t<p key={person.id}>\r\n\t\t\t\t\t{person.name} {person.number}{' '}\r\n\t\t\t\t\t<button onClick={() => handleDelete(person.id, person.name)}>\r\n\t\t\t\t\t\tdelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = (personObject) => {\r\n\tconst request = axios.post(baseUrl, personObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, personObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, personObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n\tif (notification === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`notification-${notification.type}`}>\r\n\t\t\t{notification.message}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Notification;\r\n","/* eslint-disable linebreak-style */\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\n\n// eslint-disable-next-line no-undef\nconst uuidv4 = require('uuid/v4');\n\nfunction App() {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [filterName, setFilterName] = useState('');\n\tconst [notification, setNotification] = useState({});\n\n\tuseEffect(() => {\n\t\tpersonService\n\t\t\t.getAll()\n\t\t\t.then((initialPersons) => {\n\t\t\t\tsetPersons(initialPersons);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error, 'error');\n\t\t\t});\n\t}, []);\n\n\tconst getFilterName = persons.filter((name) => {\n\t\treturn name.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1;\n\t});\n\n\tconst checkDuplicateName = persons.find((person) => person.name === newName);\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (checkDuplicateName) {\n\t\t\tconst confirm = window.confirm(\n\t\t\t\t`${newName} is already  added to phonebook, replace the old number with a new one?`,\n\t\t\t);\n\t\t\tif (confirm) {\n\t\t\t\tpersonService\n\t\t\t\t\t.update(checkDuplicateName.id, { name: newName, number: newNumber })\n\t\t\t\t\t.then((updatedPerson) => {\n\t\t\t\t\t\tlet updatedState = persons.filter(\n\t\t\t\t\t\t\t(person) => person.id !== updatedPerson.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdatedState = [...updatedState, updatedPerson];\n\t\t\t\t\t\tsetPersons(updatedState);\n\t\t\t\t\t\tsetNotification({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: `Updated ${checkDuplicateName.name}`,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetNotification(null);\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t\tsetNewName('');\n\t\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tsetNotification({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tmessage: `${checkDuplicateName.name} has already removed from server`,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetNotification(null);\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst personObject = {\n\t\t\t\tname: newName,\n\t\t\t\tnumber: newNumber,\n\t\t\t\tid: uuidv4(),\n\t\t\t};\n\n\t\t\tpersonService\n\t\t\t\t.create(personObject)\n\t\t\t\t.then((returnedPerson) => {\n\t\t\t\t\tsetPersons(persons.concat(returnedPerson));\n\t\t\t\t\tsetNotification({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: `Added ${returnedPerson.name}`,\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetNotification(null);\n\t\t\t\t\t}, 3000);\n\t\t\t\t\tsetNewName('');\n\t\t\t\t\tsetNewNumber('');\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error, 'error');\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst handleDelete = (id, name) => {\n\t\tconst confirm = window.confirm(`Delete ${name} ?`);\n\t\tif (confirm) {\n\t\t\tpersonService\n\t\t\t\t.remove(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetPersons(persons.filter((person) => person.id !== id));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error, 'error');\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value);\n\t};\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value);\n\t};\n\n\tconst handleFilterChange = (event) => {\n\t\tsetFilterName(event.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification notification={notification} />\n\t\t\t<Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n\t\t\t<h2>add a new</h2>\n\t\t\t<PersonForm\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\tnewName={newName}\n\t\t\t\thandleNameChange={handleNameChange}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\thandleNumberChange={handleNumberChange}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons getFilterName={getFilterName} handleDelete={handleDelete} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/* eslint-disable linebreak-style */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}